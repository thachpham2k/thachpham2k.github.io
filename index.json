[{"content":"\u003ch2 id=\"ý-tưởng\"\u003eÝ tưởng\u003c/h2\u003e\n\u003cp\u003eHôm trước có lên bài về việc tạo static web với Hugo với công cụ là Github và Github Action, chúng ta có thể thực hiện tương tự với các dịch vụ của AWS. Ví dụ, ta có thể sử dụng Amazon S3 để lưu trữ trang web và Amazon CloudFront để phân phối nội dung. Ta cũng có thể sử dụng AWS CodePipeline và AWS CodeBuild để tự động hóa việc triển khai trang web mỗi khi có sự thay đổi trong mã nguồn. Đây là một cách rất tiện lợi và hiệu quả để quản lý và cập nhật website của bạn mà không cần phải lo lắng về việc cài đặt và vận hành server.\u003c/p\u003e\n\u003cp\u003eBài viết này sẽ đi sâu vào việc sử dụng các dịch vụ của AWS để hộ trợ việc triển khai một website tĩnh sử dụng Hugo lên S3 Static Web.\u003c/p\u003e\n\u003ch2 id=\"tạo-s3-static-web\"\u003eTạo S3 Static web\u003c/h2\u003e\n\u003cp\u003eBước đầu tiên vẫn là tạo trang web trước, nội dung tính sau 😂. Để host trang web tĩnh trên AWS, chúng ta có thể sử dụng tính năng Static website hosting của Amazon S3. Tuy nhiên, trước khi sử dụng tính năng này, chúng ta cần phải tạo một bucket S3 để lưu trữ các file của trang web. Sau đó, ta có thể cấu hình các quyền truy cập cho bucket S3 để cho phép trang web được truy cập từ bên ngoài. Việc sử dụng tính năng \u003cstrong\u003eStatic website hosting\u003c/strong\u003e của S3 sẽ giúp cho việc host trang web trở nên đơn giản và hiệu quả hơn.\u003c/p\u003e\n\u003ch3 id=\"tạo-s3-bucket\"\u003eTạo S3 Bucket\u003c/h3\u003e\n\u003cp\u003eViệc cần thực hiện là tạo một S3 bucket với tên và tag nhất định. Tuy nhiên, để dễ dàng cho việc lưu trữ và chia sẻ website, cần phải kích hoạt \u003cstrong\u003eObject Ownership\u003c/strong\u003e và vô hiệu hóa các tùy chọn \u003cstrong\u003eBlock Public Access\u003c/strong\u003e trên bucket.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/s3-acls_enabled.png\" alt=\"Kích hoạt Object Ownership\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/S3-Block-Public-Access.png\" alt=\"Tắt tùy chọn Block Public Access\"\u003e\u003c/p\u003e\n\u003ch3 id=\"s3-static-web-hosting\"\u003eS3 Static Web Hosting\u003c/h3\u003e\n\u003cp\u003eĐể kích hoạt tính năng này, trước tiên bạn cần chọn vào S3 bucket muốn bật tính năng, sau đó chọn tab Properties, kéo xuống cuối trang và chọn Enable Static Web Hosting, sau đó nhập \u003ccode\u003eindex.html\u003c/code\u003e vào phần \u003cstrong\u003eIndex document\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/s3-static-web-hosting.png\" alt=\"Bật tính năng S3 static web hosting\"\u003e\u003c/p\u003e\n\u003cp\u003eTuy nhiên, khi truy cập vào S3 static web bằng tên miền, có thể gặp phải lỗi 403. Lỗi này xảy ra do S3 bucket chưa được public, do đó người dùng bên ngoài không thể truy cập được.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/s3-static-web-403-response.png\" alt=\"Lỗi 403 khi truy cập S3 static web\"\u003e\u003c/p\u003e\n\u003ch3 id=\"thêm-quyền-getobject\"\u003eThêm quyền getObject\u003c/h3\u003e\n\u003cp\u003eĐể cho người dùng có thể truy cập vào trang web static trên S3 mà không gặp phải lỗi 403, cần phải thêm quyền truy cập cho bucket. Việc này có thể được thực hiện bằng cách truy cập vào S3 bucket, chọn tab \u003cstrong\u003ePermissions\u003c/strong\u003e, và chọn phần \u003cstrong\u003eBucket policy\u003c/strong\u003e. Sau đó, nhập đoạn mã sau vào phần policy (nhớ điền S3 Bucket name vào phần ARN nha).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Version\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;2012-10-17\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Statement\u0026#34;\u003c/span\u003e: [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Sid\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Statement1\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Principal\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Effect\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Allow\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Action\u0026#34;\u003c/span\u003e: [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s3:GetObject\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#f92672\"\u003e\u0026#34;Resource\u0026#34;\u003c/span\u003e: [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;arn:aws:s3:::\u0026lt;S3 Bucket name\u0026gt;/*\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLúc này thử truy cập bằng S3 Static web url thì sẽ gặp lỗi 404 Not Found vì nội dung của trang web đang bị trống (không tìm thấy file index.html)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/s3-static-web-404-response.png\" alt=\"Lỗi 404 khi truy cập S3 static web\"\u003e\u003c/p\u003e\n\u003ch2 id=\"tạo-aws-codepipeline\"\u003eTạo AWS Codepipeline\u003c/h2\u003e\n\u003cp\u003eĐể tự động hóa việc triển khai trang web mỗi khi có sự thay đổi trong mã nguồn (được lưu trữ trong Code Commit) chúng ta có thể sử dụng AWS CodePipeline và AWS CodeBuild.\u003c/p\u003e\n\u003ch3 id=\"aws-codecommit\"\u003eAWS CodeCommit\u003c/h3\u003e\n\u003cp\u003eĐã có nơi để lưu các file tĩnh của trang web, tiếp theo sẽ tạo một repository trên CodeCommit để lưu trữ mã nguồn của website Hugo. Bạn có thể sử dụng giao diện web hoặc dòng lệnh để tạo repository (Ở đây mình xài console cho nó thân thiện nhé 😁).\u003c/p\u003e\n\u003cp\u003eĐầu tiên truy cập giao diện console của AWS và tìm đến phần \u003ca href=\"https://ap-southeast-1.console.aws.amazon.com/codesuite/codecommit/repositories\"\u003eCommit\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eChọn vào phần \u003cstrong\u003eCreate Repository\u003c/strong\u003e và nhập thông tin vào để tạo 1 repository thôi (🤣Đơn giản mà🤣🤣).\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeCommit-create-repo.png\" alt=\"Tạo CodeCommit Repository\"\u003e\u003c/p\u003e\n\u003cp\u003eSau khi tạo xong, bạn cần clone repository về máy tính của bạn và copy các file của website Hugo vào thư mục của repository.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeCommit-gitcommit.png\" alt=\"Commit code to Codecommit\"\u003e\u003c/p\u003e\n\u003cp\u003eVấn đề là đâu phải muốn commit là được commit đâu. Phải đăng nhập nữa. Đầu tiên cần phải sử dụng AccessToken để đăng nhập vào AWS Cli (dùng lệnh \u003ccode\u003eaws configure\u003c/code\u003e) sau đó sử dụng câu lệnh này để đăng nhập:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit config --global credential.helper \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;!aws codecommit credential-helper $@\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit config --global credential.UseHttpPath true\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"./images/CodeCommit-login-%26-push.png\" alt=\"Login to AWS CodeCommit\"\u003e\u003c/p\u003e\n\u003cp\u003ePhần này mình bỏ qua về Hugo resource, nếu muốn tìm hiểu thêm bạn chịu khó xem lại bài \u003ca href=\"https://thachpham2k.github.io/blogs/20230417-xay-dung-trang-web-voi-hugo-va-github/#t%E1%BA%A1o-website-src\"\u003eBlog\u003c/a\u003e trước của mình nhé.\u003c/p\u003e\n\u003ch3 id=\"aws-codebuild\"\u003eAWS CodeBuild\u003c/h3\u003e\n\u003cp\u003eTrước khi đi vào tạo CodeBuild thì phải xây dựng file build trước đã. Tạo 1 file có tên là \u003ccode\u003ebuildspec.yml\u003c/code\u003e và lưu nó ở trong repository được tạo ở bước trước. Và nội dung của file build như sau:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eversion\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e0.2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ephases\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003einstall\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ecommands\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003eapt-get update -y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003eecho Installing hugo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003ecurl -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.111.3/hugo_0.111.3_linux-amd64.deb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003edpkg -i hugo.deb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003ehugo version\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ebuild\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ecommands\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003ehugo -v\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eartifacts\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003efiles\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;**/*\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ebase-directory\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;public\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTạo file build xong rồi thì tạo CodeBuild thôi. Để tạo CodeBuild thì đầu tiên là truy cập đến \u003ca href=\"https://ap-southeast-1.console.aws.amazon.com/codesuite/codebuild/projects\"\u003eCodeBuild\u003c/a\u003e sau đó chọn \u003cstrong\u003eCreate build project\u003c/strong\u003e với các thông tin như:\u003c/p\u003e\n\u003cp\u003eCấu hình CodeBuild\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeBuild-config.png\" alt=\"Tạo CodeBuild - build config\"\u003e\u003c/p\u003e\n\u003cp\u003eMã nguồn\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeBuild-src.png\" alt=\"Tạo CodeBuild - source\"\u003e\u003c/p\u003e\n\u003cp\u003eMôi trường build:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeBuild-env.png\" alt=\"Tạo CodeBuild - environment\"\u003e\u003c/p\u003e\n\u003cp\u003eNgoài ra còn có vị trí file buildspec,\u0026hellip; Và cuối cùng là tạo CodeBuild\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeBuild-create.png\" alt=\"Tạo CodeBuild - tạo\"\u003e\u003c/p\u003e\n\u003cp\u003eTạo xong thì test thử thôi\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodeBuild-run.png\" alt=\"CodeBuild - chạy thử\"\u003e\u003c/p\u003e\n\u003ch3 id=\"aws-codepipeline\"\u003eAWS CodePipeline\u003c/h3\u003e\n\u003cp\u003eTạo một pipeline trên CodePipeline để tự động hóa quá trình triển khai website. Để cấu hình CodePipeline cần phải cấu hình các thành phần sau:\u003c/p\u003e\n\u003cp\u003etên pipeline\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodePipeline-config-stage.png\" alt=\"CodePipeline - config stage\"\u003e\u003c/p\u003e\n\u003cp\u003eMã nguồn (CodeCommit)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodePipeline-source-stage.png\" alt=\"CodePipeline - source stage\"\u003e\u003c/p\u003e\n\u003cp\u003egiai đoạn build (CodeBuild)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodePipeline-build-stage.png\" alt=\"CodePipeline - build stage\"\u003e\u003c/p\u003e\n\u003cp\u003egiai đoạn deploy (S3)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/CodePipeline-deploy-stage.png\" alt=\"CodePipeline - deploy stage\"\u003e\u003c/p\u003e\n\u003cp\u003eSau khi tạo xong pipeline, bạn có thể kiểm tra trạng thái của các giai đoạn và xem kết quả triển khai trên S3.\u003c/p\u003e\n\u003cp\u003eKiểm tra xem các tệp đã được cài đặt và chuyển sang S3 chưa\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/s3-success.png\" alt=\"Check CodePipeline\"\u003e\u003c/p\u003e\n\u003ch2 id=\"vấn-đề-gặp-phải-và-giải-pháp\"\u003eVấn đề gặp phải và giải pháp\u003c/h2\u003e\n\u003ch3 id=\"tùy-chọn-extract-file-before-deploy\"\u003eTùy chọn \u003cstrong\u003eExtract file before deploy\u003c/strong\u003e\u003c/h3\u003e\n\u003ch2 id=\"lời-kết\"\u003eLời kết\u003c/h2\u003e\n\u003cp\u003eĐến đây, bạn đã hoàn thành việc triển khai website Hugo lên S3 Static Web bằng CodeCommit, CodeBuild và CodePipeline. Bạn có thể thử thay đổi nội dung của website trên CodeCommit và xem pipeline tự động chạy và cập nhật website trên S3. Chúc các bạn thành công!\u003c/p\u003e\n","description":"Sẽ ra sao nếu trang web được dựng bằng công cụ của AWS","image":"/images/blogs/20230419-xay-dung-trang-web-voi-hugo-s3-awscodepipeline.png","permalink":"https://thachpham2k.github.io/blogs/20230419-xay-dung-trang-web-voi-hugo-s3-awscodepipeline/","title":"Xây dựng website cá nhân với Hugo, S3 và AWS Codepipeline"},{"content":"\u003ch2 id=\"ý-tưởng\"\u003eÝ tưởng\u003c/h2\u003e\n\u003cp\u003eDự án xây dựng một trang web cá nhân là một ý tưởng đã từng ở trong đầu mình từ rất lâu. Là một dân IT, việc tạo ra một không gian riêng để chia sẻ những điều mà mình đam mê, những kiến thức mà mình tích luỹ, và những trải nghiệm mà mình đã trải qua luôn là một ý tưởng hấp dẫn đối với mình. Tuy nhiên, do công việc bận rộn và sự thiếu hụt kỹ năng lập trình frontend, dự án này đã bị hoãn lại trong một thời gian khá dài.\u003c/p\u003e\n\u003cp\u003eTuy nhiên, vào gần đây, do có cơ hội nghiên cứu và tìm hiểu về Hugo, và mình cảm thấy rất hứng thú và tự tin để triển khai ý tưởng của mình một lần nữa.\u003c/p\u003e\n\u003cp\u003eĐược đồng chí trong team admin VietAWS UG giới thiệu về Hugo lâu rồi nhưng gần đây mình mới được dịp tiếp xúc và tìm hiểu về nó, như thấy được đây là cơ hội để thực hiện ý tưởng, mình đã quyết định áp dụng ngay và xây dựng nên trang web này.\u003c/p\u003e\n\u003ch2 id=\"xây-dựng-trang-web-với-hugo\"\u003eXây dựng trang web với hugo\u003c/h2\u003e\n\u003cp\u003eĐể xây dựng trang web với Hugo, bước đầu tiên vẫn là nắm vững tổng quan về nó (Bài viết chỉ là tổng quan chứ không đi sâu về mặt kĩ thuật nên mọi người muốn hiểu rõ thì chịu khó đọc document nha).\u003c/p\u003e\n\u003ch3 id=\"cài-đặt-hugo\"\u003eCài đặt Hugo\u003c/h3\u003e\n\u003cp\u003eMình sử dụng ubuntu để host nên sử dụng apt package manager và câu lệnh như sau:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMọi người có thể tìm hiểu cách cái đặt ở trang \u003ca href=\"https://gohugo.io/installation/\"\u003ehugo installation\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"tạo-khung-sườn-cho-hugo\"\u003eTạo khung sườn cho hugo\u003c/h3\u003e\n\u003cp\u003eSau khi cài đặt thì đi đến tạo website đầu tiên với hugo\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site mysite\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd mysite\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHugo sẽ tạo 1 folder tên là mysite và đây là cấu trúc của folder mà hugo vừa tạo\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/hugo%20mysite%20structure.png\" alt=\"cấu trúc cơ bản của một hugo source\"\u003e\u003c/p\u003e\n\u003ch3 id=\"themes\"\u003eThemes\u003c/h3\u003e\n\u003cp\u003eThế là đã có khung sườn cho hugo. Công việc tiếp theo là tìm themes cho hắn. Vậy thì tìm themes ở đâu? ở trang \u003ca href=\"https://themes.gohugo.io/\"\u003eHugo themes\u003c/a\u003e này nè\u003c/p\u003e\n\u003cp\u003eSau khi lục lọi 1 hồi thì mình đã tìm đến \u003ca href=\"https://hugo-profile.netlify.app/\"\u003ehugo-profile theme\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/hugo-profile%20theme.png\" alt=\"Hugo-profile themes\"\u003e\u003c/p\u003e\n\u003cp\u003eSau khi xem xét qua phần giao diện và hiển thị tiếng việt thì vẫn thấy cái theme này trông quá ư là ổn nên quất luôn😘😘\u003c/p\u003e\n\u003ch4 id=\"cấu-hình-hugo\"\u003eCấu hình hugo\u003c/h4\u003e\n\u003cp\u003eChọn được theme rồi thì thêm nó vào trong hugo project thôi. Về lệnh thì do có chút khác biệt về phần themes nên mình sử câu lệnh hơi khác so với trang \u003ca href=\"https://gohugo.io/getting-started/quick-start/\"\u003eHugo quickstart\u003c/a\u003e nên ai gặp lỗi thì có thể tham khảo document của Hugo\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd mysite\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add https://github.com/gurusabarish/hugo-profile.git themes/hugo-profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecp themes/hugo-profile/exampleSite/config.yaml ./\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"bài-viết-đầu-tiên\"\u003eBài viết đầu tiên\u003c/h4\u003e\n\u003cp\u003eĐể lên bài đầu tiên thì đầu tiên vẫn phải là nghiên cứu qua cấu trúc của 1 blog được mình sử dụng\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/blog-structure.png\" alt=\"Cấu trúc của 1 bài blog\"\u003e\u003c/p\u003e\n\u003cp\u003eMuốn tìm hiểu kĩ hơn về phần này thì bạn có thể đọc qua về \u003ca href=\"https://gohugo.io/content-management/page-bundles/\"\u003eHugo page bundles\u003c/a\u003e trong document của hugo.\u003c/p\u003e\n\u003cp\u003eTìm hiều về cách cấu hình single page của tác giả theme\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etitle: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Xây dựng website cá nhân với Hugo và GitHub\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# này là title của trang web\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edate: 2023-04-17T00:00:00+07:00 \u003cspan style=\"color:#75715e\"\u003e# thời gian lên bài\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edraft: false \u003cspan style=\"color:#75715e\"\u003e# Cái này không biết nó có tác dụng gì\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauthor: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Thạch Phạm\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e# Tên tác giả, được hiển thị ở dưới title\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etags: \u003cspan style=\"color:#75715e\"\u003e# phần tag này được hiển thị ở phía bên phải bên dưới phần table of content\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  - Hugoweb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  - Github Action\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  - StaticWeb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimage: /images/blogs/20230417-xay-dung-trang-web-voi-hugo-va-github.png \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ảnh bìa của bài viết được hiển thị ở phần danh sách bài viết và bên dưới title\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edescription: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Trang web này được dựng lên như thế nào?\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Phần mô tả này hông thấy được hiển thị\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etoc: \u003cspan style=\"color:#75715e\"\u003e# này là viết tắt của table of content, mặc định là true (có thể thị phần table of content ở phía bên phải)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;Nội dung bài viết được viết ở đây\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThế là xem như đã tạo xong 1 hugo project cơ bản.\u003c/p\u003e\n\u003ch3 id=\"vấn-đề-gặp-phải-và-giải-pháp\"\u003eVấn đề gặp phải và giải pháp\u003c/h3\u003e\n\u003cp\u003eNhìn thì đơn giản vậy thôi, chứ do là newbie bên mảng này nên gặp bug cũng khá nhiều\u003c/p\u003e\n\u003ch4 id=\"configtoml\"\u003econfig.toml\u003c/h4\u003e\n\u003cp\u003eNày là do mình lên document của Hugo copy mà không chịu đọc kĩ thế là mình tạo hugo project bằng những lệnh sau:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site website-src\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd website-src\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add https://github.com/gurusabarish/hugo-profile.git themes/hugo-profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;theme = \u0026#39;hugo-profile\u0026#39;\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; config.toml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecp themes/hugo-profile/exampleSite/config.yaml ./\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThế là tạo 2 file config, cơ mà hugo nó lấy cấu hình ở file \u003ccode\u003econfig.toml\u003c/code\u003e nên trang chủ của web dù mình sửa thế nào cũng chả hiển thị cái gì\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/loi-cau-hinh.png\" alt=\"Lỗi cấu hình Hugo\"\u003e\u003c/p\u003e\n\u003cp\u003eLoay hoay 1 lúc thì mới tìm được vấn để, thế là phải xóa file \u003ccode\u003econfig.toml\u003c/code\u003e đi.\u003c/p\u003e\n\u003cp\u003eMọi người muốn hiểu rõ hơn về phần cấu hình này thì có thể đọc \u003ca href=\"https://gohugo.io/getting-started/configuration/\"\u003eHugo configuration\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"hiển-thị-ảnh-bìa\"\u003eHiển thị ảnh bìa\u003c/h4\u003e\n\u003cp\u003eHiển thị ảnh trong bài viết thì bình thường chứ hiển thị ảnh bìa thì nó hơi khác tí.\u003c/p\u003e\n\u003cp\u003eNếu để link banner trong thuộc tính images của page là  \u003ccode\u003eimages/banner.png\u003c/code\u003e thì lúc hiển thị danh sách bài viết sẽ không thấy ảnh bìa còn nều để là \u003ccode\u003e\u0026lt;post\u0026gt;/images/banner.png\u003c/code\u003e thì vào bên trong bài viết sẽ gặp lỗi hiển thị ảnh bìa. Thế là phải đi lục lại bài gốc của tác giả và anh ấy sử dụng địa chỉ tuyệt đối dạng \u003ccode\u003e/images/banner.png\u003c/code\u003e loay hoay tìm thư mục \u003ccode\u003eimages\u003c/code\u003e thì phát hiện nó ở trong thư mục \u003ccode\u003estatic\u003c/code\u003e bằng ở root directory của hugo project. Kiểm tra ngay và thấy mọi thứ đã oke. Và mình đã tạo nên thư mục \u003ccode\u003eblogs\u003c/code\u003e bên trong \u003ccode\u003eimages\u003c/code\u003e dùng để lưu các banner của bài viết.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"./images/luu-anh-bia-cua-trang.png\" alt=\"Cách lưu ảnh bìa của 1 trang\"\u003e\u003c/p\u003e\n\u003ch4 id=\"mình-xóa-git-link-đến-resource-của-tác-giả\"\u003eMình xóa git link đến resource của tác giả\u003c/h4\u003e\n\u003cp\u003eThay vì sử dụng \u003ccode\u003egit submodule add https://github.com/gurusabarish/hugo-profile.git themes/hugo-profile\u003c/code\u003e thì mình lại dùng \u003ccode\u003egit clone https://github.com/gurusabarish/hugo-profile.git\u003c/code\u003e sau đó \u003ccode\u003erm -rf .git\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eBản thân có chỉnh sửa đôi chút qua theme source của tác giả nên sẽ không sử dụng \u003ccode\u003egit submodule add ...\u003c/code\u003e bởi như vậy thì github sẽ nhận diện git repo của người khác và sẽ tạo liên kết đến đó làm cho những chỉnh sửa của mình trở nên vô dụng.\u003c/p\u003e\n\u003cp\u003eHơi có chút không tôn trọng bản quyền của tác giả nhưng thôi vậy dùng tạm 😁 chân thành xin lỗi ha 😘.\u003c/p\u003e\n\u003ch2 id=\"triển-khai-website-lên-github-và-cấu-hình-github-action\"\u003eTriển khai website lên github và cấu hình Github Action\u003c/h2\u003e\n\u003cp\u003eThế là xong phần web ở local, đưa em nó lên mạng thôi 😍\u003c/p\u003e\n\u003ch3 id=\"tạo-thachpham2kgithubio\"\u003eTạo thachpham2k.github.io\u003c/h3\u003e\n\u003cp\u003ePhần này thì github viết hơi bị dễ hiểu luôn á, nên mọi người có thể tham khảo \u003ca href=\"https://pages.github.com/\"\u003eTạo static website với github\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eTóm tắt thì việc cần làm ở đây là tạo 1 github repository dạng \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"tạo-website-src\"\u003eTạo website-src\u003c/h3\u003e\n\u003cp\u003eTương tự bước trước đó nhưng lần này thích đặt tên là gì cũng được, đây sẽ là nơi chưa source của hugo project.\u003c/p\u003e\n\u003ch3 id=\"tạo-personal-token\"\u003eTạo Personal Token\u003c/h3\u003e\n\u003cp\u003ePersonal token là gì? Tại sao lại phải tạo nó? Nó được sử dụng khi nào?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGitHub Personal Access Token (hoặc còn được gọi là GitHub Personal Token) là một loại mã truy cập được cung cấp bởi GitHub để xác thực và ủy quyền các hoạt động trên GitHub. Nó cho phép người dùng thực hiện các hoạt động như tạo, đọc, cập nhật và xóa các kho lưu trữ, quản lý issues, pull requests, quản lý các settings và các hoạt động khác liên quan đến tài khoản GitHub.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePAT sẽ được sử dụng trong Github Action. Ở bước cuối cùng, khi muốn đẩy nội dung bên trong thư mục \u003ccode\u003epublic\u003c/code\u003e của hugo qua thachpham2k.github.io repository thì phải cho Github bot quyền để nó được phép đẩy code lên đó. Và quyền đó sẽ được cấu hình đi kèm với PAT và github bot sẽ dùng nó để có quyền đẩy code lên repo.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eĐể tạo PAT thì:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eTruy cập \u003ca href=\"https://github.com/settings/tokens\"\u003eGithub Personal Access Token\u003c/a\u003e hoặc vào github -\u0026gt; setting -\u0026gt; developer setting -\u0026gt; Personal Access Token -\u0026gt; Tokens (classic)\u003c/li\u003e\n\u003cli\u003eTạo Token bằng cách click vào \u003ccode\u003eGenerate new token\u003c/code\u003e rồi chọn \u003ccode\u003eGenerate new token (classic)\u003c/code\u003e rồi nhập tên, cài đặt hạn sử dụng và quyền hạn cho nó.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eSau khi tạo thì sẽ đến bước thêm Token vào \u003ccode\u003esecret environment\u003c/code\u003e để bot có thể biết mà sử dụng.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eTruy cập hugo project repository\u003c/li\u003e\n\u003cli\u003eSetting -\u0026gt; Secrets and variables -\u0026gt; Actions\u003c/li\u003e\n\u003cli\u003eTại đây chọn \u003ccode\u003eNew repository secret\u003c/code\u003e Ứng dụng sẽ đều hướng qua trang tạo environments\u003c/li\u003e\n\u003cli\u003eTại trang environments tạo 1 environments mới có tên là \u003ccode\u003eGITHUB_TOKEN\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eBên trong giao diện của Environment tạo 1 \u003ccode\u003eenvironment secret\u003c/code\u003e có tên là \u003ccode\u003eTOKEN\u003c/code\u003e và nhập PAT được tạo trước đó và phần value\u003c/li\u003e\n\u003cli\u003eQuanh lại giao diện Setting -\u0026gt; Secrets and variables -\u0026gt; Actions sẽ thấy 1 Enviromnet token được tạo có tên là \u003ccode\u003eGITHUB_TOKEN\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"./images/environment_secret.png\" alt=\"Environment secret đã được tạo\"\u003e\u003c/p\u003e\n\u003cp\u003eTrong file cấu hình github action, nếu muốn sử dụng github PAT thì phải khai báo dạng\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epersonal_token: ${{ secrets.GITHUB_TOKEN }}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"tạo-github-deploy-key\"\u003eTạo Github Deploy key\u003c/h3\u003e\n\u003cp\u003eNếu không muốn sử dụng PAT thì có 1 tùy chọn khác đó là sử dụng ssh key. Để có thể dụng cách này đầu tiên cần có 1 ssh key có thể dụng cho github.\u003c/p\u003e\n\u003cp\u003eSử dụng ssh-keygen để tạo key\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;phamthach2506@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"./images/t%E1%BA%A1o%20ssh%20key.png\" alt=\"Tạo ssh key\"\u003e\u003c/p\u003e\n\u003cp\u003eở bước \u003ccode\u003eEnter file in which to save the key (C:\\Users\\phamt/.ssh/id_ed25519): abcde\u003c/code\u003e nếu không nhập gì thì ssh sẽ tạo ra key có tên là \u003ccode\u003eid_ed25519\u003c/code\u003e và \u003ccode\u003eid_ed25519.pub\u003c/code\u003e còn ở đây mình có nhập \u003ccode\u003eabcde\u003c/code\u003e thì sẽ tạo ra file key có tên là \u003ccode\u003eid_abcde\u003c/code\u003e và \u003ccode\u003eid_abcde.pub\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eSau khi tạo key thì tiến hành cấu hình tren github\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUpload private key\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003eTruy cập repo hugo project (website-src)\u003c/li\u003e\n\u003cli\u003eSetting -\u0026gt; Secrets and variables -\u0026gt; Actions\u003c/li\u003e\n\u003cli\u003eTại đây chọn \u003ccode\u003eNew repository secret\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eNhập name là \u003ccode\u003ePRIVATEKEY\u003c/code\u003e còn value là nội dung của file \u003ccode\u003eid_adcde\u003c/code\u003e vừa được tạo\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"./images/t%E1%BA%A1o%20deploy%20key.png\" alt=\"Tạo PRIVATEKEY\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUpload public key\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003eTruy cập website repo (thachpham2k.github.io)\u003c/li\u003e\n\u003cli\u003eSetting -\u0026gt; Deploy key\u003c/li\u003e\n\u003cli\u003eAdd deploy key\u003c/li\u003e\n\u003cli\u003eNhập title là PUBLICKEY và Key là nội dung của file \u003ccode\u003eid_abcde.pub\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eClick vào \u003ccode\u003eAllow write access\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003eSử dụng: Trong file cấu hình github action, nếu muốn sử dụng github PAT thì phải khai báo dạng\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edeploy_key: ${{ secrets.privatekey }}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"tạo-github-action\"\u003eTạo Github action\u003c/h3\u003e\n\u003cp\u003eĐầu tiên là tìm đến source repo (website-src) và chọn đến tab Action\u003c/p\u003e\n\u003cp\u003eỞ đây tìm đến mục tìm kiếm workflow và nhập \u003ccode\u003eSimple workflow\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eBên trong file \u003ccode\u003eblank.yml\u003c/code\u003e chỉnh sửa nội dung thành như thế này\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the workflow will run\non:\n  # Triggers the workflow on push or pull request events but only for the \u0026#34;main\u0026#34; branch\n  push:\n    branches: [ \u0026#34;main\u0026#34; ]\n  pull_request:\n    branches: [ \u0026#34;main\u0026#34; ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \u0026#34;build\u0026#34;\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n    permissions: write-all\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v3\n        \n#       - name: Update themes\n#         run: git submodule update --init --recursive\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: \u0026#39;latest\u0026#39;\n          \n      - name: build\n        run: hugo -v\n      \n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3.9.3\n        with:\n          # personal_token: ${{ secrets.GITHUB_TOKEN }}\n          deploy_key: ${{ secrets.privatekey }}\n          external_repository: thachpham2k/thachpham2k.github.io\n          publish_dir: ./public\n          # user_name: thachpham2k\n          # user_email: phamthach2506@gmail.com\n          publish_branch: master\n          allow_empty_commit: true\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePhần này có khá nhiều thứ, lười giải thích quá. Mọi người commit file và đợi kết quả thôi.\u003c/p\u003e\n\u003ch3 id=\"vấn-đề-gặp-phải-và-giải-pháp-1\"\u003eVấn đề gặp phải và giải pháp\u003c/h3\u003e\n\u003cp\u003eMục này xuất hiện gần như là điều hiển nhiên rồi, newbie mà, làm sao để tránh khỏi lỗi đây\u003c/p\u003e\n\u003ch4 id=\"sử-dụng-github-token\"\u003eSử dụng github token\u003c/h4\u003e\n\u003cp\u003eĐầu tiên mình sử dụng github token (được recommend sử dụng vì tính bảo mật) nhưng mà ở project này Github token không đáp ứng đủ quyền (quyền write) nên mình phải chuyển qua xài PAT.\u003c/p\u003e\n\u003ch4 id=\"sử-dụng-pat\"\u003eSử dụng PAT\u003c/h4\u003e\n\u003cp\u003eVì Github token không đáp ứng được nhu cầu nên mình chuyển qua sử dụng PAT, tuy nhiên vấn đề gần tương tự đã xảy ra là mình cấu hình token và khi chạy cứ nhận về Permission deny. Lười test các permission quá nên mình chuyển qua xài Deploy key 🤣😂 để hôm này rảnh quay lại test cái PAT (hôm nào này hơi xa đó).\u003c/p\u003e\n\u003ch4 id=\"xây-dựng-file-build-cho-github-action\"\u003eXây dựng file build cho github action\u003c/h4\u003e\n\u003cp\u003eMình gặp chút vấn đề khi tạo file cấu hình git action.\u003c/p\u003e\n\u003cp\u003eCụ thể là khi lấy giá trị token mình sử dụng \u003ccode\u003epersonal_token: ${{ secrets.TOKEN }}\u003c/code\u003e thay vì \u003ccode\u003epersonal_token: ${{ secrets.GITHUB_TOKEN }}\u003c/code\u003e làm loay hoay chả biết sai ở đâu (công nhận lúc đó hơi ngáo thật).\u003c/p\u003e\n\u003ch2 id=\"lời-kết\"\u003eLời kết\u003c/h2\u003e\n\u003cp\u003eBài viết ghi lại phần nào quá trình mình tạo nên trang web này. Cũng là lần đầu chơi với Hugo cũng như git action và chưa dành nhiều thời gian nghiên cứu kĩ nên kiến thức sẽ có hơi sơ xài hay có thể sai mong mọi người có thể góp ý qua fb hoặc gmail mình để ở cuối trang web\u003c/p\u003e\n\u003cp\u003eChân thành cảm ơn đã đọc hế bài viết. BYE👋👋👋\u003c/p\u003e\n","description":"Trang web này được dựng lên như thế nào?","image":"/images/blogs/20230417-xay-dung-trang-web-voi-hugo-va-github.png","permalink":"https://thachpham2k.github.io/blogs/20230417-xay-dung-trang-web-voi-hugo-va-github/","title":"Xây dựng website cá nhân với Hugo và GitHub"},{"content":"","description":"My gallery :earth_asia:","image":null,"permalink":"https://thachpham2k.github.io/gallery/","title":"Image Gallery"}]